{
  "_args": [
    [
      "upload-js@2.11.2",
      "/Users/milindadhaulya/Documents/hack/gpt-visualizer"
    ]
  ],
  "_from": "upload-js@2.11.2",
  "_id": "upload-js@2.11.2",
  "_inBundle": false,
  "_integrity": "sha512-q6IkwFLA3kL1MbBMvzCbJC0EHjMgjJ399f5QH3Up5rkoVjYXZxTKRgyJQeRT1HpqPQ3gCJdvZuL/Cv1LjBRGMg==",
  "_location": "/upload-js",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "upload-js@2.11.2",
    "name": "upload-js",
    "escapedName": "upload-js",
    "rawSpec": "2.11.2",
    "saveSpec": null,
    "fetchSpec": "2.11.2"
  },
  "_requiredBy": [
    "/uploader"
  ],
  "_resolved": "https://registry.npmjs.org/upload-js/-/upload-js-2.11.2.tgz",
  "_spec": "2.11.2",
  "_where": "/Users/milindadhaulya/Documents/hack/gpt-visualizer",
  "author": {
    "name": "Upload",
    "email": "hello@upload.io",
    "url": "https://upload.io"
  },
  "bugs": {
    "url": "https://github.com/upload-io/upload-js/issues"
  },
  "dependencies": {
    "@upload-io/upload-api-client-upload-js": "^2.15.0",
    "progress-smoother": "^1.4.0"
  },
  "description": "File Upload Library ‚Äî Upload.js gives developers AJAX multipart file uploading via XHR üöÄ Comes with Cloud Storage üåê",
  "devDependencies": {
    "@babel/cli": "7.17.6",
    "@babel/core": "7.17.8",
    "@babel/preset-env": "7.11.5",
    "@typescript-eslint/eslint-plugin": "4.8.1",
    "@typescript-eslint/parser": "4.8.1",
    "@wdio/cli": "^7.19.3",
    "@wdio/local-runner": "^7.19.3",
    "@wdio/mocha-framework": "^7.19.3",
    "@wdio/spec-reporter": "^7.19.1",
    "babel-loader": "8.2.3",
    "babel-plugin-transform-async-to-promises": "0.8.15",
    "chromedriver": "^109.0.0",
    "eslint": "7.32.0",
    "eslint-config-prettier": "6.15.0",
    "eslint-config-standard-with-typescript": "19.0.1",
    "eslint-plugin-import": "2.22.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.2.1",
    "eslint-plugin-return-types-object-literals": "1.0.1",
    "eslint-plugin-standard": "4.1.0",
    "eslint-plugin-wdio": "^7.19.0",
    "minimist": "1.2.6",
    "ts-loader": "8.0.11",
    "ts-node": "^10.7.0",
    "tsc-alias": "1.2.10",
    "typescript": "4.6.2",
    "wdio-chromedriver-service": "^7.3.2",
    "wdio-wait-for": "^2.2.5",
    "webdriverio": "^7.19.3",
    "webpack": "5.5.1",
    "webpack-bundle-analyzer": "4.2.0",
    "webpack-cli": "4.10.0",
    "webpack-node-externals": "2.5.2"
  },
  "files": [
    "/dist/**/*",
    "/tests/**/*"
  ],
  "homepage": "https://upload.io/upload-js",
  "keywords": [
    "file-upload",
    "file-uploader",
    "uploader",
    "upload",
    "front-end"
  ],
  "license": "MIT",
  "main": "dist/main.js",
  "name": "upload-js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/upload-io/upload-js.git"
  },
  "scripts": {
    "analyse": "npm run clean && webpack --config webpack.config.analyse.js",
    "clean": "rm -rf dist && rm -f upload-js.tgz",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "postpack": "([ ! -f upload-js-*.tgz ] || mv upload-js-*.tgz upload-js.tgz) && rm README.md",
    "prepack": "npm run clean && webpack --config webpack.config.js && tsc-alias && cp ../README.md README.md",
    "prepack:cdn": "npm run clean && webpack --config webpack.config.cdn.js && find dist -name \"*.ts\" -type f -delete && for f in dist/*.js; do cp -- \"$f\" \"${f%.js}\"; done",
    "prepack:fat": "npm run clean && webpack --config webpack.config.fat.js && tsc-alias",
    "publish:cdn": "npm run prepack:cdn && aws s3 cp --recursive --content-type application/javascript dist/ s3://upload-js-releases/upload-js/ && aws cloudfront create-invalidation --distribution-id EO4VJPLCDN8HY --paths '/upload-js/*'",
    "publish:createGitHubRelease": "gh release create v$(node -p \"require('./package.json').version\")",
    "publish:execute": "npm run publish:cdn && npm publish && npm run publish:createGitHubRelease",
    "publish:executeIfReleaseCommit": "bash -c 'COMMIT=$(git log -1 --pretty=%B) && [ \"${COMMIT:0:8}\" != \"Release \" ] || npm run publish:execute'",
    "test": "npx wdio run tests/wdio.conf.ts --autoCompileOpts.tsNodeOpts.project=tests/tsconfig.json",
    "typecheck": "tsc --noEmit"
  },
  "types": "dist/index.d.ts",
  "version": "2.11.2"
}
